http://themlbook.com/wiki/doku.php
https://towardsdatascience.com/the-mathematics-behind-principal-component-analysis-fff2d7f4b643
http://faculty.marshall.usc.edu/gareth-james/ISL/ISLR%20Seventh%20Printing.pdf
From Jon-Cody Sokoll to Everyone:  09:20 AM
https://medium.com/apprentice-journal/hyper-parameter-optimization-c9b78372447b
From Jon-Cody Sokoll to Everyone:  11:30 AM
https://scikit-learn.org/stable/modules/clustering.html
https://krannert.purdue.edu/masters/business-analytics-and-information-management/student-experiences/experiential-learning/2018/a-machine-learning-approach-to-delivery-time-estimation-for-industrial-equipment.php?


def r2metrics(model,X,y):
    mse=mean_squared_error(y,model.predict(X))
    mae=mean_absolute_error(y,model.predict(X))
    rmse=np.sqrt(mean_squared_error(y,model.predict(X)))
    print('mse :{}'.format(mse))
    print('mae :{}'.format(mae))
    print('rmse :{}'.format(rmse))
def plotgraph(model,X_train,y_train,X_test,y_test):
    import seaborn as sns
    sns.set(color_codes=True)
    plt.figure(figsize=(10,9))
    sns.regplot(x=y_test, y=model.predict(X_test),fit_reg=True,scatter_kws={"color": "green"});
    sns.regplot(x=y_train, y=model.predict(X_train),fit_reg=True,scatter_kws={"color": "yellow"});
    plt.xlabel("Actual Price")
    plt.ylabel("Predicted Price")
    plt.title('Train data vs Test Data ')
    plt.show()

pipeline_lasso=Pipeline([('scalar1',StandardScaler()),('lasso',Lasso())])
pipeline_lasso.fit(bos_train_X,bos_train_y)
print(lasso.intercept_)
print(lasso.coef_)
r2metrics(pipeline_lasso,bos_test_X,bos_test_y)
plotgraph(pipeline_lasso,bos_train_X,bos_train_y,bos_test_X,bos_test_y)
